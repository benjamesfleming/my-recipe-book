{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["nodes","data","allMarkdownRemark","useState","filters","setFilters","recipes","map","n","frontmatter","categories","_","r","category","tags","reduce","current","filteredRecipes","useMemo","length","filter","f","indexOf","toggle","_f","PageHeader","PageContent","className","c","i","key","tabIndex","role","onClick","onKeyUp","e","keyCode","trim","t","to","path","title","defer","header","content","pageQuery"],"mappings":"gnBAMe,sBAAe,IAElBA,EAFiB,EAAXC,KACNC,kBACAF,MAFiB,EAIKG,mBAAS,IAAhCC,EAJkB,KAITC,EAJS,KAMnBC,EAAUN,EAAMO,KAAI,SAAAC,GAAC,OAAIA,EAAEC,eAC3BC,EAAaC,OAAOL,EAAQC,KAAI,SAAAK,GAAC,OAAIA,EAAEC,aACvCC,EAAOH,OACTL,EAAQS,QAAO,SAACC,EAASJ,GAAV,kBAAoBI,GAApB,EAAgCJ,EAAEE,SAAO,KAGtDG,EAAkBC,mBACpB,kBACId,EAAQe,OAAS,EACXb,EAAQc,QACJ,SAAAR,GAAC,OACGR,EAAQgB,QAAO,SAAAC,GAAC,OAAIT,EAAEE,KAAKQ,QAAQD,IAAM,KAAGF,OACxC,GAAKf,EAAQkB,QAAQV,EAAEC,WAAa,KAEhDP,IACV,CAACF,EAASE,IAGRiB,EAAS,SAAAF,GACXhB,EACID,EAAQkB,QAAQD,IAAM,EAChBjB,EAAQgB,QAAO,SAAAI,GAAE,OAAIA,IAAOH,KADlC,YAEUjB,GAFV,CAEmBiB,MAIrBI,EACF,oCACI,+CAIFC,EACF,oCACI,0CACA,yBAAKC,UAAU,sCACVjB,EAAWH,KAAI,SAACqB,EAAGC,GAAJ,OACZ,yBACIC,IAAKD,EACLE,SAAUF,EAAI,EACdG,KAAK,SACLC,QAAS,kBAAMV,EAAOK,IACtBM,QAAS,SAAAC,GAAC,OAAkB,KAAdA,EAAEC,SAAkBb,EAAOK,IACzCD,WAAW,+GAGHvB,EAAQkB,QAAQM,IAAM,EAChB,0CACA,sBALH,8BAOTS,QAEDT,OAIb,wBAAID,UAAU,QAAd,YACA,yBAAKA,UAAU,wCACVb,EAAKP,KAAI,SAAC+B,EAAGT,GAAJ,OACN,yBACIC,IAAKD,EACLE,SAAUrB,EAAWS,OAASU,EAAI,EAClCG,KAAK,SACLC,QAAS,kBAAMV,EAAOe,IACtBJ,QAAS,SAAAC,GAAC,OAAkB,KAAdA,EAAEC,SAAkBb,EAAOe,IACzCX,WAAW,kGAGHvB,EAAQkB,QAAQgB,IAAM,EAChB,iBACA,iBALH,8BAOTD,QAEDC,OAIb,wBAAIX,UAAU,cACd,6BACKV,EAAgBV,KAAI,SAACK,EAAGiB,GAAJ,OACjB,yBACIC,IAAKD,EACLF,UAAU,uCAEV,0BAAMA,UAAU,sBACXf,EAAEC,SADP,UAGA,kBAAC,IAAD,CAAM0B,GAAI3B,EAAE4B,MAAO5B,EAAE6B,aAOzC,OACI,oCACI,kBAAC,SAAD,CAAQC,OAAO,GACX,wDAEJ,kBAAC,IAAD,CAAQC,OAAQlB,EAAYmB,QAASlB,MAK1C,IAAMmB,EAAS","file":"component---src-pages-index-js-d1e484e7d46d0a640f7d.js","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql, Link } from \"gatsby\";\nimport * as _ from \"lodash\";\nimport Layout from \"../layout\";\n\nexport default ({ data }) => {\n    const { allMarkdownRemark } = data;\n    const { nodes } = allMarkdownRemark;\n\n    const [filters, setFilters] = useState([]);\n\n    const recipes = nodes.map(n => n.frontmatter);\n    const categories = _.uniq(recipes.map(r => r.category));\n    const tags = _.uniq(\n        recipes.reduce((current, r) => [...current, ...r.tags], [])\n    );\n\n    const filteredRecipes = useMemo(\n        () =>\n            filters.length > 0\n                ? recipes.filter(\n                      r =>\n                          filters.filter(f => r.tags.indexOf(f) > -1).length >\n                              0 || filters.indexOf(r.category) > -1\n                  )\n                : recipes,\n        [filters, recipes]\n    );\n\n    const toggle = f => {\n        setFilters(\n            filters.indexOf(f) > -1\n                ? filters.filter(_f => _f !== f)\n                : [...filters, f]\n        );\n    };\n\n    const PageHeader = (\n        <>\n            <h1>My Recipe Book</h1>\n        </>\n    );\n\n    const PageContent = (\n        <>\n            <h3>Categories</h3>\n            <div className=\"flex flex-wrap justify-start -mx-1\">\n                {categories.map((c, i) => (\n                    <div\n                        key={i}\n                        tabIndex={i + 1}\n                        role=\"button\"\n                        onClick={() => toggle(c)}\n                        onKeyUp={e => e.keyCode === 13 && toggle(c)}\n                        className={`\n                            mx-1 mt-2 p-1 cursor-pointer border-b-4 rounded\n                            ${\n                                filters.indexOf(c) > -1\n                                    ? \"border-green-600 bg-green-200 shadow-lg\"\n                                    : \"border-transparent\"\n                            }\n                        `.trim()}\n                    >\n                        {c}\n                    </div>\n                ))}\n            </div>\n            <h3 className=\"mt-6\">All Tags</h3>\n            <div className=\"flex flex-wrap justify-between -mx-2\">\n                {tags.map((t, i) => (\n                    <div\n                        key={i}\n                        tabIndex={categories.length + i + 1}\n                        role=\"button\"\n                        onClick={() => toggle(t)}\n                        onKeyUp={e => e.keyCode === 13 && toggle(t)}\n                        className={`\n                            mt-2 mx-2 cursor-pointer font-bold\n                            ${\n                                filters.indexOf(t) > -1\n                                    ? \"text-green-600\"\n                                    : \"text-gray-800\"\n                            }\n                        `.trim()}\n                    >\n                        {t}\n                    </div>\n                ))}\n            </div>\n            <hr className=\"mt-4 mb-0\" />\n            <div>\n                {filteredRecipes.map((r, i) => (\n                    <div\n                        key={i}\n                        className=\"mt-3 flex items-start justify-start\"\n                    >\n                        <span className=\"whitespace-no-wrap\">\n                            {r.category} \\\\&nbsp;\n                        </span>\n                        <Link to={r.path}>{r.title}</Link>\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n\n    return (\n        <>\n            <Helmet defer={false}>\n                <title>Home \\\\ RecipeBook</title>\n            </Helmet>\n            <Layout header={PageHeader} content={PageContent} />\n        </>\n    );\n};\n\nexport const pageQuery = graphql`\n    query {\n        allMarkdownRemark {\n            nodes {\n                frontmatter {\n                    category\n                    path\n                    tags\n                    title\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}